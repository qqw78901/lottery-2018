"use strict";

var _createClass = (function() {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
})();

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

/**
 * Created by zuowenqi on 2018/2/2 0002
 */
var BS = (function() {
    function BS() {
        _classCallCheck(this, BS);
    }

    _createClass(BS, null, [
        {
            key: "fetch",
            value: function fetch(url, data, type) {
                return new Promise(function(resolve) {
                    $.ajax({
                        type: type ? type : "GET",
                        data: data ? data : {},
                        url: url,
                        success: function success(resp) {
                            resolve(resp);
                        }
                    });
                });
            }
        },
        {
            key: "addAwards",
            value: function addAwards(award_name, award_capacity) {
                award_capacity *= 1;
                return this.fetch("/add_award", {
                    award_name: award_name,
                    award_capacity: award_capacity
                });
            }
        },
        {
            key: "removeAwards",
            value: function removeAwards(award_id) {
                return this.fetch("/remove_award", {
                    award_id: award_id
                });
            }
        },
        {
            key: "getAwards",
            value: function getAwards() {
                return this.fetch("/awards");
            }
        },
        {
            key: "setCurrent",
            value: function setCurrent(id) {
                return new Promise(function(resolve) {
                    var prev = localStorage.getItem("current_award") || "";
                    localStorage.setItem("prev_award", prev);
                    localStorage.setItem("current_award", id);
                    resolve(localStorage.getItem("current_award"));
                });
            }
        },
        {
            key: "getCurrent",
            value: function getCurrent() {
                return localStorage.getItem("current_award");
            }
        }
    ]);

    return BS;
})();

$(function() {
    $("#add").click(function(e) {
        layer.open({
            title: "增加",
            content:
                '\n<div>\u5956\u54C1\u540D<input type="text" id="addname"></div>\n<div>\u6570&emsp;\u91CF<input type="text" id="addnum"></div>\n',
            yes: function yes(index) {
                var name = $("#addname").val();
                var num = $("#addnum").val();
                BS.addAwards(name, num).then(function(resp) {
                    console.log(resp);
                    flushAwards();
                    if (resp.status === 200) {
                        layer.close(index);
                    } else {
                        alert(resp.msg);
                    }
                });
            }
        });
    });
    $("#reset").click(function(e) {
        layer.confirm("确定要重置吗", function(index) {
            BS.fetch("/reset").then(function(resp) {
                if (resp.status === 200) {
                    layer.close(index);
                    window.location.reload(1);
                }
            });
        });
    });
    $(document)
        .on("click", ".js-set", function(e) {
            var aid = $(e.target).data("aid");
            var $lis = $("#awardList").find("li");
            BS.setCurrent(aid).then(function() {
                $lis.removeClass("cur");
                $(e.target)
                    .closest("li")
                    .addClass("cur");
            });
        })
        .on("click", ".js-remove", function(e) {
            layer.confirm("确认要删除该项？", function() {
                var aid = $(e.target).data("aid");
                var loadIndex = layer.load(2);
                BS.removeAwards(aid).then(function(resp) {
                    if (resp.status === 200) {
                        flushAwards();
                        layer.close(loadIndex);
                    } else {
                        layer.close(loadIndex);
                        layer.alert(resp.msg);
                    }
                });
            });
        });
    flushAwards();
});

function flushAwards() {
    var currentAward = BS.getCurrent();
    BS.getAwards().then(function(resp) {
        console.log(resp);
        var ul = "";
        resp.data.forEach(function(val) {
            var list =
                '    \n            <li class="' +
                (currentAward === val.award_id ? "cur" : "") +
                '">\n                <div class="fr">\n                    <a type="radio" class="button button-primary button-rounded button-small js-set" data-aid="' +
                val.award_id +
                '">\u8BBE\u7F6E\u6210\u5F53\u524D\u8F6E</a>\n                    <a type="radio" class="button button-caution button-circle js-remove" data-aid="' +
                val.award_id +
                '"><i class="fa fa-trash"></i></a>\n                </div>\n                <div class="content">\n                   \u5956\u9879\u540D\u79F0\uFF1A' +
                val.award_name +
                "\uFF0C\u6570\u91CF\uFF1A" +
                val.award_capacity +
                "\n                </div>\n            </li>";
            ul += list;
        });
        $("#awardList").html(ul);
    });
}
